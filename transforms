:
        if w.state == '0-iter-again':
            loop1(gs,sc,w)
            gs.restack()
            w.state = '0-iter-end' if gs.gameover else '0-iter-again'
            continue
------------------------------------------------------------ split-state
        if w.state == '0-iter-again':
            loop1(gs,sc,w)
            w.state = '0-split'
            continue

        if w.state == '0-split':
            gs.restack()
            w.state = '0-iter-end' if gs.gameover else '0-iter-again'
            continue
:

def loop1(gs,sc,w):
    w.state = '1-iter-again' if gs.more else '1-iter-end'
    while w.state != '1-exit-loop':

        if w.state == '1-iter-again':
            sc.question(gs.question)
            if sc.answer(gs.answer):
                gs.toss()
            else:
                gs.keep()
            w.state = '1-iter-again' if gs.more else '1-iter-end'
            continue

        if w.state == '1-iter-end':
            w.state = '1-exit-loop'
            continue

def loop0(gs,sc,w):
    w.state = '0-iter-end' if gs.gameover else '0-iter-again'
    while w.state != '0-exit-loop':

        if w.state == '0-iter-again':
            loop1(gs,sc,w)
            gs.restack()
            w.state = '0-iter-end' if gs.gameover else '0-iter-again'
            continue

        if w.state == '0-iter-end':
            gs.check_endgame()
            w.state = '0-exit-loop'
            continue
------------------------------------------------------------ fold-in-function
def loop0(gs,sc,w):
    w.state = '0-iter-end' if gs.gameover else '0-iter-again'
    while w.state != '0-exit-loop':

        if w.state == '0-iter-again':
            w.state = '1-iter-again'
            continue
            
        if w.state == '1-iter-end':
            gs.restack()
            w.state = '0-iter-end' if gs.gameover else '0-iter-again'
            continue
            
        if w.state == '1-iter-again':
            sc.question(gs.question)
            if sc.answer(gs.answer):
                gs.toss()
            else:
                gs.keep()
            w.state = '1-iter-again' if gs.more else '1-iter-end'
            continue
            
        if w.state == '0-iter-end':
            gs.check_endgame()
            w.state = '0-exit-loop'
            continue
:
def loop0(gs,sc,w):
    w.state = '0-iter-end' if gs.gameover else '0-iter-again'
    while w.state != '0-exit-loop':

        if w.state == '0-iter-again':
            w.state = '1-iter-again'
            continue
            
        if w.state == '1-iter-end':
            gs.restack()
            w.state = '0-iter-end' if gs.gameover else '0-iter-again'
            continue
            
        if w.state == '1-iter-again':
            sc.question(gs.question)
            if sc.answer(gs.answer):
                gs.toss()
            else:
                gs.keep()
            w.state = '1-iter-again' if gs.more else '1-iter-end'
            continue
            
        if w.state == '0-iter-end':
            gs.check_endgame()
            w.state = '0-exit-loop'
            continue
------------------------------------------------------- remove-vacuous-state
def loop0(gs,sc,w):
    w.state = '0-iter-end' if gs.gameover else '1-iter-again'
    while w.state != '0-exit-loop':

        if w.state == '1-iter-end':
            gs.restack()
            w.state = '0-iter-end' if gs.gameover else '1-iter-again'
            continue
            
        if w.state == '1-iter-again':
            sc.question(gs.question)
            if sc.answer(gs.answer):
                gs.toss()
            else:
                gs.keep()
            w.state = '1-iter-again' if gs.more else '1-iter-end'
            continue
            
        if w.state == '0-iter-end':
            gs.check_endgame()
            w.state = '0-exit-loop'
            continue
